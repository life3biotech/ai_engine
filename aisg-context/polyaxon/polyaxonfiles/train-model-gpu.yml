version: 1.1
kind: component
name: train-model-gpu
description: Job for training a predictive model using GPU.
tags: [model_training, keras, gpu]
inputs:
  - name: DOCKER_IMAGE
    isOptional: true
    type: str
    value: asia.gcr.io/<GCP_PROJECT_ID>/model-train:0.1.0
  - name: MLFLOW_TRACKING_USERNAME
    description: Username for MLflow Tracking server.
    isOptional: false
    type: str
    toEnv: MLFLOW_TRACKING_USERNAME
  - name: MLFLOW_TRACKING_PASSWORD
    description: Password for MLflow Tracking server.
    isOptional: false
    type: str
    toEnv: MLFLOW_TRACKING_PASSWORD
  - name: SETUP_MLFLOW
    description: Whether to intialise MLflow logging or not.
    isOptional: true
    type: bool
    value: false
  - name: MLFLOW_AUTOLOG
    description: Whether to use MLflow's autologging feature.
    isOptional: true
    type: bool
    value: false
  - name: MLFLOW_TRACKING_URI
    description: URI for MLflow Tracking server.
    isOptional: false
    type: str
  - name: MLFLOW_EXP_NAME
    description: Experiment name for MLflow Tracking server.
    isOptional: false
    type: str
  - name: WORKING_DIR
    description: The working directory for the job to run in.
    isOptional: false
    type: str
  - name: LOAD_DATA
    description: Whether to run the data pipeline to initialise new training data.
    isOptional: true
    type: bool
    value: false
  - name: INITIAL_LR
    description: Learning rate to start from.
    isOptional: true
    type: float
    value: 0.00001
  - name: EARLY_STOPPING
    description: Determines whether the early stopping mechanism is activated during training.
    isOptional: true
    type: bool
    value: true
  - name: EARLY_STOP_PATIENCE
    description: Number of epochs to wait before early stopping is activated if there is no improvement in the metrics.
    isOptional: true
    type: int
    value: 10
  - name: LR_REDUCE_FACTOR
    description: Factor by which the learning rate will be reduced.
    isOptional: true
    type: float
    value: 0.1
  - name: LR_REDUCE_PATIENCE
    description: Number of epochs with no improvement after which learning rate will be reduced.
    isOptional: true
    type: int
    value: 2
  - name: LR_MIN_DELTA
    description: Threshold for measuring the new optimum.
    isOptional: true
    type: float
    value: 0.01
  - name: TRAIN_ANNOT_PATH
    description: Absolute or relative path pointing to the training data set to be used.
    isOptional: false
    type: str
  - name: VAL_ANNOT_PATH
    description: Absolute or relative path pointing to the validation data set to be used.
    isOptional: false
    type: str
  - name: TEST_ANNOT_PATH
    description: Absolute or relative path pointing to the test data set to be used.
    isOptional: false
    type: str
  - name: TRAIN_BACKBONE
    description: Compound coefficient used to scale EfficientNet, the backbone network.
    isOptional: false
    type: int
  - name: EPOCHS
    description: Number of epochs to train.
    isOptional: true
    type: int
    value: 50
  - name: STEPS
    description: Number of steps per epoch.
    isOptional: true
    type: int
    value: 128
  - name: BATCH_SIZE
    description: Number of images included in each batch during training.
    isOptional: true
    type: int
    value: 8
  - name: WEIGHTED_BIFPN
    description: Determines whether EfficientNet backbone uses weighted BiFPN.
    isOptional: true
    type: bool
    value: true
  - name: FREEZE_BN
    description: Determines whether the batch normalization layers of the backbone network are frozen during training.
    isOptional: true
    type: bool
    value: false
  - name: FREEZE_BACKBONE
    description: Determines whether the weights of the backbone network are frozen during training.
    isOptional: true
    type: bool
    value: false
  - name: SA_CRED_PATH
    description: Path to credential file for GCP service account.
    isOptional: true
    type: str
    value: /var/secret/cloud.google.com/gcp-service-account.json
    toEnv: GOOGLE_APPLICATION_CREDENTIALS
run:
  kind: job
  connections: [fstore-pvc]
  environment:
    imagePullSecrets: ["gcp-imagepullsecrets"]
    tolerations:
      - key: "nvidia.com/gpu"
        operator: "Equal"
        value: "present"
        effect: "NoSchedule"
  volumes:
    - name: gcp-service-account
      secret:
        secretName: "gcp-sa-credentials"
  container:
    image: "{{ DOCKER_IMAGE }}"
    imagePullPolicy: IfNotPresent
    workingDir: "{{ WORKING_DIR }}"
    command: ["/bin/bash","-c"]
    args: [
      "source ~/.bashrc &&
      python src/train_model.py
      train.setup_mlflow={{ SETUP_MLFLOW }}
      train.mlflow_autolog={{ MLFLOW_AUTOLOG }}
      train.mlflow_tracking_uri={{ MLFLOW_TRACKING_URI }}
      train.mlflow_exp_name={{ MLFLOW_EXP_NAME }}
      train.load_data={{ LOAD_DATA }}
      train.initial_lr={{ INITIAL_LR }}
      train.early_stopping={{ EARLY_STOPPING }}
      train.patience={{ EARLY_STOP_PATIENCE }}
      train.lr_reduce_factor={{ LR_REDUCE_FACTOR }}
      train.lr_reduce_patience={{ LR_REDUCE_PATIENCE }}
      train.lr_min_delta={{ LR_MIN_DELTA }}
      efficientdet.train_annotations_path={{ TRAIN_ANNOT_PATH }}
      efficientdet.val_annotations_path={{ VAL_ANNOT_PATH }}
      efficientdet.test_annotations_path={{ TEST_ANNOT_PATH }}
      efficientdet.train_backbone={{ TRAIN_BACKBONE }}
      efficientdet.epochs={{ EPOCHS }}
      efficientdet.steps={{ STEPS }}
      efficientdet.batch_size={{ BATCH_SIZE }}
      efficientdet.weighted_bifpn={{ WEIGHTED_BIFPN }}
      efficientdet.freeze_bn={{ FREEZE_BN }}
      efficientdet.freeze_backbone={{ FREEZE_BACKBONE }}"
    ]
    resources:
      requests:
        memory: "25Gi"
        cpu: 3
        nvidia.com/gpu: 1
      limits:
        memory: "25Gi"
        cpu: 3
        nvidia.com/gpu: 1
    volumeMounts:
      - name: gcp-service-account
        mountPath: /var/secret/cloud.google.com
